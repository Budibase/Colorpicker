// node_modules/.pnpm/svench@0.2.0-8_svelte@3.35.0/node_modules/svench/src/index.js
import {default as default2} from "/Users/kevinabergkultalahti/Workspace/Contracting/Budibase/Colorpicker/node_modules/.pnpm/svench@0.2.0-8_svelte@3.35.0/node_modules/svench/src/View.svelte";
import {default as default3} from "/Users/kevinabergkultalahti/Workspace/Contracting/Budibase/Colorpicker/node_modules/.pnpm/svench@0.2.0-8_svelte@3.35.0/node_modules/svench/src/Render.svelte";
import {default as default4} from "/Users/kevinabergkultalahti/Workspace/Contracting/Budibase/Colorpicker/node_modules/.pnpm/svench@0.2.0-8_svelte@3.35.0/node_modules/svench/src/Register.svelte";
import {default as default5} from "/Users/kevinabergkultalahti/Workspace/Contracting/Budibase/Colorpicker/node_modules/.pnpm/svench@0.2.0-8_svelte@3.35.0/node_modules/svench/src/Svench.svelte";

// node_modules/.pnpm/svelte@3.35.0/node_modules/svelte/internal/index.mjs
function noop() {
}
function run(fn) {
  return fn();
}
function run_all(fns) {
  fns.forEach(run);
}
function is_function(thing) {
  return typeof thing === "function";
}
function safe_not_equal(a, b) {
  return a != a ? b == b : a !== b || (a && typeof a === "object" || typeof a === "function");
}
function is_empty(obj) {
  return Object.keys(obj).length === 0;
}
var tasks = new Set();
var active_docs = new Set();
var current_component;
function get_current_component() {
  if (!current_component)
    throw new Error("Function called outside component initialization");
  return current_component;
}
function setContext(key2, context) {
  get_current_component().$$.context.set(key2, context);
}
function getContext(key2) {
  return get_current_component().$$.context.get(key2);
}
var resolved_promise = Promise.resolve();
var seen_callbacks = new Set();
var outroing = new Set();
var globals = typeof window !== "undefined" ? window : typeof globalThis !== "undefined" ? globalThis : global;
var boolean_attributes = new Set([
  "allowfullscreen",
  "allowpaymentrequest",
  "async",
  "autofocus",
  "autoplay",
  "checked",
  "controls",
  "default",
  "defer",
  "disabled",
  "formnovalidate",
  "hidden",
  "ismap",
  "loop",
  "multiple",
  "muted",
  "nomodule",
  "novalidate",
  "open",
  "playsinline",
  "readonly",
  "required",
  "reversed",
  "selected"
]);
function destroy_component(component, detaching) {
  const $$ = component.$$;
  if ($$.fragment !== null) {
    run_all($$.on_destroy);
    $$.fragment && $$.fragment.d(detaching);
    $$.on_destroy = $$.fragment = null;
    $$.ctx = [];
  }
}
var SvelteElement;
if (typeof HTMLElement === "function") {
  SvelteElement = class extends HTMLElement {
    constructor() {
      super();
      this.attachShadow({mode: "open"});
    }
    connectedCallback() {
      const {on_mount} = this.$$;
      this.$$.on_disconnect = on_mount.map(run).filter(is_function);
      for (const key2 in this.$$.slotted) {
        this.appendChild(this.$$.slotted[key2]);
      }
    }
    attributeChangedCallback(attr, _oldValue, newValue) {
      this[attr] = newValue;
    }
    disconnectedCallback() {
      run_all(this.$$.on_disconnect);
    }
    $destroy() {
      destroy_component(this, 1);
      this.$destroy = noop;
    }
    $on(type, callback) {
      const callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);
      callbacks.push(callback);
      return () => {
        const index = callbacks.indexOf(callback);
        if (index !== -1)
          callbacks.splice(index, 1);
      };
    }
    $set($$props) {
      if (this.$$set && !is_empty($$props)) {
        this.$$.skip_bound = true;
        this.$$set($$props);
        this.$$.skip_bound = false;
      }
    }
  };
}

// node_modules/.pnpm/svench@0.2.0-8_svelte@3.35.0/node_modules/svench/src/util.js
var key = {context: "Svench"};
var getContext2 = () => getContext(key);
var setContext2 = (value) => setContext(key, value);
var updateContext = (transform) => setContext2(typeof transform === "function" ? transform(getContext2()) : {...getContext2(), ...transform});
var noop2 = () => {
};
var identity = (x) => x;
var pipe = (...fns) => {
  if (typeof fns[0] === "string") {
    const prop = fns.shift();
    const o = {
      [prop]: (x) => fns.reduce((f, g) => g(f), x)
    };
    return o[prop];
  }
  return (x) => fns.reduce((f, g) => g(f), x);
};
{
  let nesting = 0;
  let padding = 0;
  pipe.peep = (...fns) => {
    const _log2 = (prefix, char) => (x) => {
      console.log("  ".repeat(nesting) + prefix.padStart(padding - nesting * 2, char), x);
      return x;
    };
    return pipe(typeof fns[0] === "string" ? fns[0] : identity, _log2(`->`, "-"), (x) => {
      nesting++;
      return x;
    }, ...fns.filter((x) => typeof x !== "string").flatMap((f) => {
      const prefix = f.name + " =>";
      padding = Math.max(padding, prefix.length);
      return [f, _log2(prefix)];
    }), (x) => {
      nesting--;
      return x;
    }, _log2("=>", "="));
  };
  pipe.safe = (...fns) => pipe(...fns.filter(Boolean));
  pipe.safe.peep = (...fns) => pipe.peep(...fns.filter(Boolean));
}
var split = (...args) => function split2(x) {
  return x.split(...args);
};
var reduce = (...args) => function reduce2(x) {
  return x.reduce(...args);
};
var _log = (...args) => (x) => {
  console.log(...args, x);
  return x;
};
{
  _log.out = _log("=>");
  Object.defineProperties(_log, {
    in: {
      get() {
        _log.ix = 0;
        return _log("\n->");
      }
    },
    x: {
      get() {
        return _log(++_log.ix + ":");
      }
    }
  });
}

// node_modules/.pnpm/svench@0.2.0-8_svelte@3.35.0/node_modules/svench/src/helpers/onRender.js
var onRender_default = (callback) => {
  updateContext((ctx) => ({
    ...ctx,
    onRender: callback
  }));
};

// node_modules/.pnpm/svench@0.2.0-8_svelte@3.35.0/node_modules/svench/src/constants.js
var VIEW_INIT = Symbol("View.init");
var sectionPrefix = "/_";

// node_modules/.pnpm/svench@0.2.0-8_svelte@3.35.0/node_modules/svench/src/helpers/url.js
var resolveRaw = (route) => function _resolveRaw(path) {
  if (path.startsWith("/"))
    return path;
  if (path.startsWith("."))
    return ["", route.dir, path].join("/");
  const segments = route.canonical.split("/").slice(0, -1);
  return [...segments, path].join("/");
};
var dropSectionPrefix = (path) => path.startsWith(sectionPrefix) ? path.slice(sectionPrefix.length) : path;
var resolveUp = pipe(split("../"), reduce((lead, next) => lead.replace(/[^/]+\/$/, next)));
var normalize = (path) => path.replace(/(?:\/|^)\.(?=\/|$)/g, "/").replace(/\/{2,}/g, "/");
var replaceVirtuals = (path) => path.replace(/\.(?![./])/g, "/");
var urlResolver = (route, canonical = false) => pipe.safe(resolveRaw(route, canonical), normalize, replaceVirtuals, canonical && dropSectionPrefix, resolveUp, normalize);
var url = {
  subscribe: (listener) => {
    const {route} = getContext2();
    listener(urlResolver(route));
    return noop2;
  }
};

// node_modules/.pnpm/svench@0.2.0-8_svelte@3.35.0/node_modules/svench/src/start.js
import Svench from "/Users/kevinabergkultalahti/Workspace/Contracting/Budibase/Colorpicker/node_modules/.pnpm/svench@0.2.0-8_svelte@3.35.0/node_modules/svench/src/Svench.svelte";
var applyRc = (options) => {
  const {rc} = options;
  if (!rc)
    return options;
  switch (typeof rc.options) {
    case "function":
      return rc.options(options);
    case "object":
      return {...options, ...rc.options};
  }
  return options;
};
var start = (options, target = document.body, hot) => {
  if (target && !(target instanceof Element)) {
    hot = target;
    target = document.body;
  }
  options = applyRc(options);
  const app = new Svench({
    target,
    props: {
      ui: () => import("./index.js"),
      ...options
    }
  });
  if (hot) {
    hot.dispose(() => {
      app.$destroy();
    });
    hot.accept();
  }
  return app;
};
var start_default = start;

// node_modules/.pnpm/svelte@3.35.0/node_modules/svelte/store/index.mjs
var subscriber_queue = [];
function writable(value, start2 = noop) {
  let stop;
  const subscribers = [];
  function set(new_value) {
    if (safe_not_equal(value, new_value)) {
      value = new_value;
      if (stop) {
        const run_queue = !subscriber_queue.length;
        for (let i = 0; i < subscribers.length; i += 1) {
          const s = subscribers[i];
          s[1]();
          subscriber_queue.push(s, value);
        }
        if (run_queue) {
          for (let i = 0; i < subscriber_queue.length; i += 2) {
            subscriber_queue[i][0](subscriber_queue[i + 1]);
          }
          subscriber_queue.length = 0;
        }
      }
    }
  }
  function update(fn) {
    set(fn(value));
  }
  function subscribe2(run2, invalidate = noop) {
    const subscriber = [run2, invalidate];
    subscribers.push(subscriber);
    if (subscribers.length === 1) {
      stop = start2(set) || noop;
    }
    run2(value);
    return () => {
      const index = subscribers.indexOf(subscriber);
      if (index !== -1) {
        subscribers.splice(index, 1);
      }
      if (subscribers.length === 0) {
        stop();
        stop = null;
      }
    };
  }
  return {set, update, subscribe: subscribe2};
}

// node_modules/.pnpm/svench@0.2.0-8_svelte@3.35.0/node_modules/svench/src/hot-routes-store.js
var hot_routes_store_default = (hot, routes) => {
  const hotData = hot && hot.data || {};
  const routes$ = hotData.routes || writable([]);
  routes$.set(routes);
  if (hot) {
    hot.dispose((data = hot.data) => {
      data.routes = routes$;
    });
    hot.accept();
  }
  return routes$;
};
export {
  default4 as Register,
  default3 as Render,
  default5 as Svench,
  default2 as View,
  hot_routes_store_default as hotRoutes,
  onRender_default as onRender,
  start_default as start,
  url
};
//# sourceMappingURL=svench.js.map
