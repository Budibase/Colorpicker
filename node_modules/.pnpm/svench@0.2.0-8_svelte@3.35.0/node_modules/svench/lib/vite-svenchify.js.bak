/**
 *     import { svenchify } from 'svench/snowpack'
 *
 *     module.exports = svenchify('snowpack.config.js', {
 *       ...
 *     })
 */
import svelte from 'rollup-plugin-svelte'

import { parseOptions, mergePresets } from './config.js'
import svench from './vite-plugin.js'

const not = fn => x => !fn(x)

const isSveltePlugin = x => {
  if (!x) return false
  return x.name === 'svelte'
}

const resolveViteConfig = (source, args) =>
  (typeof source === 'function' ? source(...args) : source) || {}

const svenchify = (viteConfig, svenchOptions = !!+process.env.SVENCH) => (
  ...configArgs
) => {
  const enabled =
    svenchOptions === true || (svenchOptions && svenchOptions.enabled)

  if (!enabled) return viteConfig

  const parsedSvenchOptions = parseOptions(
    mergePresets({}, ['svench/presets/vite'])
  )

  const { extensions } = parsedSvenchOptions

  const {
    resolve: { dedupe = [], ...resolve } = {},
    plugins,
    ...config
  } = resolveViteConfig(viteConfig, configArgs)

  return {
    ...config,

    resolve: {
      ...resolve,
      dedupe: [...dedupe, 'svelte'],
    },

    plugins: [
      // TODO wrap existing svelte
      svelte({
        extensions,
        emitCss: false, // TODO
        hot: true,
      }),
      svench({
        enabled,
        ...svenchOptions,
      }),
      ...plugins.filter(not(isSveltePlugin)),
    ],
  }
}

export default svenchify
