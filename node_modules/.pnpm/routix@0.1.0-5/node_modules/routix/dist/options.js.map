{"version":3,"file":"options.js","sources":["../node_modules/cheap-watch/dist/CheapWatch.esm.js","../src/util/fp.js","../src/read.js","../src/util/index.js","../src/parse.js","../src/build/util.js","../src/build/tree.js","../src/model.js","../src/build/routes.js","../src/build/extras.js","../src/build.js","../src/util/findup.js","../src/options.js"],"sourcesContent":["import * as EventEmitter from 'events';\nimport { watch, readdir as readdir$1, stat as stat$1 } from 'fs';\nimport { promisify } from 'util';\n\nconst readdir = promisify(readdir$1);\nconst stat = promisify(stat$1);\nclass CheapWatch extends EventEmitter {\n    constructor(data) {\n        super();\n        this.watch = true;\n        this.debounce = 10;\n        this.paths = new Map();\n        this._watchers = new Map();\n        this._timeouts = new Map();\n        this._queue = [];\n        this._status = 0;\n        Object.assign(this, data);\n        if (typeof this.dir !== 'string') {\n            throw new TypeError('dir must be a string');\n        }\n        if (this.filter && typeof this.filter !== 'function') {\n            throw new TypeError('filter must be a function');\n        }\n        if (typeof this.watch !== 'boolean') {\n            throw new TypeError('watch must be a boolean');\n        }\n        if (typeof this.debounce !== 'number') {\n            throw new TypeError('debounce must be a number');\n        }\n    }\n    async init() {\n        if (this._status !== 0) {\n            throw new Error('cannot call init() twice');\n        }\n        this._status = 1;\n        await this._recurse(this.dir);\n        this._status = 2;\n    }\n    close() {\n        if (this._status === 0 || this._status === 1) {\n            throw new Error('cannot call close() before init() finishes');\n        }\n        if (this._status === 4) {\n            throw new Error('cannot call close() twice');\n        }\n        this._status = 4;\n        for (const watcher of this._watchers.values()) {\n            watcher.close();\n        }\n    }\n    async _recurse(full) {\n        const path = full.slice(this.dir.length + 1);\n        const stats = await stat(full);\n        if (path) {\n            if (this.filter && !(await this.filter({ path, stats }))) {\n                return;\n            }\n            this.paths.set(path, stats);\n        }\n        if (stats.isDirectory()) {\n            if (this.watch) {\n                this._watchers.set(path, watch(full, this._handle.bind(this, full)).on('error', () => { }));\n            }\n            await Promise.all((await readdir(full)).map(sub => this._recurse(full + '/' + sub)));\n        }\n    }\n    _handle(dir, event, file) {\n        this._debounce(dir);\n        this._debounce(dir + '/' + file);\n    }\n    _debounce(path) {\n        if (this._timeouts.has(path)) {\n            clearTimeout(this._timeouts.get(path));\n        }\n        this._timeouts.set(path, setTimeout(() => {\n            this._timeouts.delete(path);\n            this._enqueue(path);\n        }, this.debounce));\n    }\n    async _enqueue(full) {\n        this._queue.push(full);\n        if (this._status !== 2) {\n            return;\n        }\n        this._status = 3;\n        while (this._queue.length) {\n            const full = this._queue.shift();\n            const path = full.slice(this.dir.length + 1);\n            const stats = await stat(full).catch(() => { });\n            if (stats) {\n                if (this.filter && !(await this.filter({ path, stats }))) {\n                    continue;\n                }\n                const isNew = !this.paths.has(path);\n                this.paths.set(path, stats);\n                if (path) {\n                    this.emit('+', { path, stats, isNew });\n                }\n                if (stats.isDirectory() && !this._watchers.has(path)) {\n                    await this._recurse(full);\n                    for (const [new_path, stats] of this.paths.entries()) {\n                        if (new_path.startsWith(path + '/')) {\n                            this.emit('+', { path: new_path, stats, isNew: true });\n                        }\n                    }\n                }\n            }\n            else if (this.paths.has(path)) {\n                const stats = this.paths.get(path);\n                this.paths.delete(path);\n                this.emit('-', { path, stats });\n                if (this._watchers.has(path)) {\n                    for (const old_path of this._watchers.keys()) {\n                        if (old_path === path || old_path.startsWith(path + '/')) {\n                            this._watchers.get(old_path).close();\n                            this._watchers.delete(old_path);\n                        }\n                    }\n                    for (const old_path of this.paths.keys()) {\n                        if (old_path.startsWith(path + '/')) {\n                            const stats = this.paths.get(old_path);\n                            this.paths.delete(old_path);\n                            this.emit('-', { path: old_path, stats });\n                        }\n                    }\n                }\n            }\n        }\n        this._status = 2;\n    }\n}\n\nexport default CheapWatch;\n//# sourceMappingURL=CheapWatch.esm.js.map\n","const piper = (x, f) => f(x)\n\nexport const pipe = (...fns) => x0 => fns.reduce(piper, x0)\n\nconst flower = (x, f) => (f(x), x)\n\nexport const flow = (...fns) => x0 => fns.reduce(flower, x0)\n\n// debugging util\nexport const _log = (...prefix) => x => {\n  // eslint-disable-next-line no-console\n  console.log(...prefix, x)\n  return x\n}\n\nexport const map = (mapper, o) => {\n  const fn = x => {\n    if (x.map) return x.map(mapper)\n    const result = []\n    let i = 0\n    for (const item of x) {\n      result.push(mapper(item, i++, x))\n    }\n    return result\n  }\n  if (o) return fn(o)\n  return o\n}\n","import CheapWatch from 'cheap-watch'\n\nimport { map } from '@/util/fp'\n\nexport default ({ log, dir, extensions, watch = false, ignore }, build) => {\n  const isWatchedFile = path => extensions.some(x => path.endsWith(x))\n\n  const filter = ({ path, stats }) =>\n    (stats.isDirectory() || isWatchedFile(path)) && !(ignore && ignore(path))\n\n  const watcher = new CheapWatch({ dir, watch, filter })\n\n  log.info(\n    `${watch ? 'Watching' : 'Reading'} ${dir}/**/*.(${extensions\n      .map(x => x.slice(1))\n      .join('|')})`\n  )\n\n  if (watch) {\n    watcher.on('+', ({ path, stats, isNew }) => {\n      if (isNew) {\n        build.add([path, stats])\n      } else {\n        build.update([path, stats])\n      }\n    })\n\n    watcher.on('-', ({ path, stats }) => build.remove([path, stats]))\n  }\n\n  let initPromise\n\n  const init = () =>\n    initPromise ||\n    (initPromise = watcher\n      .init()\n      .then(() => map(build.add, watcher.paths))\n      .then(build.start))\n\n  const close = async () => {\n    await initPromise\n    watcher.close()\n  }\n\n  return { init, close, isWatchedFile }\n}\n","export const pipe = (...fns) => x0 => fns.reduce((x, f) => f(x), x0)\n\nexport const identity = x => x\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Escaping\nexport const escapeRe = string =>\n  string.replace(/[.*+\\-?^${}()|[\\]\\\\]/g, '\\\\$&')\n\nexport const noop = () => {}\n\nexport const split = (predicate, items) => {\n  const yes = []\n  const no = []\n  for (const item of items) {\n    const target = predicate(item) ? yes : no\n    target.push(item)\n  }\n  return [yes, no]\n}\n\nexport const Deferred = () => {\n  let resolve, reject\n  const promise = new Promise((_resolve, _reject) => {\n    resolve = _resolve\n    reject = _reject\n  })\n  return { promise, resolve, reject }\n}\n\nexport const stringHashCode = str => {\n  let hash = 5381\n  let i = str.length\n  while (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i)\n  return (hash >>> 0).toString(36)\n}\n","import * as path from 'path'\nimport { identity, stringHashCode } from '@/util'\n\nconst parseItem = ({ dir, extensions }, arg) => {\n  if (Array.isArray(arg)) {\n    const [relative] = arg\n    const ext =\n      extensions.find(x => relative.endsWith(x)) || path.extname(relative)\n    return {\n      isFile: true,\n      relative,\n      absolute: path.join(dir, relative),\n      extension: ext,\n      path: ext ? relative.slice(0, -ext.length) : relative,\n    }\n  }\n  return arg\n}\n\nconst parseFile = options => async (arg, previous) => {\n  const { leadingSlash, parse = identity } = options\n\n  const item = parseItem(options, arg)\n\n  item.id = stringHashCode(item.isFile ? item.absolute : `d:${item.path}`)\n\n  if (leadingSlash && item.path[0] !== '/') {\n    item.path = '/' + item.path\n  }\n\n  const result = await parse(item, previous, options)\n\n  // canceled\n  if (result === false) return false\n\n  return item\n}\n\nexport default parseFile\n","export const _ = JSON.stringify\n\nexport const addIndex = (x, i) => (x.i = i)\n\nexport const indent = (...args) => {\n  if (args.length === 2) {\n    return (_lines, collapse) => indent(...args, _lines, collapse)\n  }\n  const [n, glue, _lines, collapse] = args\n  const lines = _lines.filter(Boolean)\n  const spaces = '  '.repeat(n)\n  return collapse && lines.length === 2\n    ? spaces + lines.join('')\n    : lines.map(x => (/^\\s/.test(x) ? x : spaces + x)).join(glue + '\\n')\n}\n\nindent.collapse = (...args) => indent(...args, true)\n\nexport const _ref = x => `${x.isFile ? 'f' : 'd'}[${x.i}]`\n\nexport const _props = (props = {}) =>\n  Object.entries(props).map(([prop, value]) => `${_(prop)}: ${_(value)}`)\n","import { noop } from '@/util'\nimport { indent, _ref, _props } from './util'\n\nconst FILE = Symbol('routix.tree.FILE')\n\nconst isFileNode = node => node[FILE] && node[FILE].isFile\n\nconst notExcludedFromTree = ([, node]) =>\n  !node[FILE] || node[FILE].tree !== false\n\nconst getNode = (from, steps) => {\n  let node = from\n  for (const step of steps) {\n    if (step === '') continue\n    if (!node[step]) {\n      node[step] = {}\n    }\n    node = node[step]\n  }\n  return node\n}\n\nconst getNodes = (from, steps) => {\n  const nodes = [from]\n  let cursor = from\n  for (const step of steps) {\n    if (step === '') continue\n    if (!cursor[step]) {\n      cursor[step] = {}\n    }\n    cursor = cursor[step]\n    nodes.push(cursor)\n  }\n  return nodes\n}\n\nconst _tree = (format, rootPath, root) =>\n  indent(0, '', [\n    `const tree = {`,\n    indent(1, ',', [\n      `path: ${JSON.stringify(rootPath)}`,\n      `isRoot: true`,\n      ..._props(format(root)),\n      root.children.length\n        ? indent(1, '', [\n            'children: [',\n            indent(2, ',', root.children.map(_ref)),\n            ']',\n          ])\n        : 'children: []',\n    ]),\n    '}',\n  ])\n\nexport default (options, { parse, build }) => {\n  const {\n    leadingSlash,\n    format = noop,\n    cacheChildren = true,\n    sortChildren = false,\n    resolveConflict,\n  } = options\n\n  const rootPath = leadingSlash ? '/' : ''\n\n  const root = {\n    [FILE]: { isRoot: true, path: rootPath },\n  }\n\n  const emitDirs = (children, dirs) => {\n    children.forEach(file => {\n      emitDirs(file.children, dirs)\n      if (!file.isFile && !file.isRoot) {\n        dirs.push(file)\n      }\n    })\n  }\n\n  const unfold = async (node, _path, dirs) => {\n    // --- create directory node (if needed) ---\n\n    if (!node[FILE]) {\n      const p = _path.slice(0, -1)\n      const file = {\n        isFile: false,\n        path: p,\n      }\n      await parse(file, null, options)\n      node[FILE] = file\n    }\n\n    const file = node[FILE]\n\n    // --- create children prop (if not cached) ---\n\n    if (!cacheChildren || !file.children) {\n      const children = Object.entries(node).filter(notExcludedFromTree)\n\n      await Promise.all(\n        children.map(([seg, x]) => unfold(x, _path + seg + '/', dirs))\n      )\n\n      file.children = children.map(([, x]) => x[FILE])\n\n      if (sortChildren) {\n        file.children.sort(sortChildren)\n      }\n    } else {\n      emitDirs(file.children, dirs)\n    }\n\n    if (!file.isFile && !file.isRoot) {\n      dirs.push(file)\n    }\n  }\n\n  const split = leadingSlash ? x => x.slice(1).split('/') : x => x.split('/')\n\n  const splitPath = file => split(file.path)\n\n  const invalidate = file => {\n    const steps = splitPath(file)\n    const nodes = getNodes(root, steps)\n    for (const node of nodes) {\n      if (node[FILE]) delete node[FILE].children\n    }\n  }\n\n  const isConflict = (file, existing, replace) => {\n    if (!existing) return false\n    if (!replace) return true\n    // NOTE if it's not the same file, then it's a conflict, even with replace\n    //\n    // With:\n    // - foo.js       => path: /foo\n    // - foo.index.js => path: /foo\n    //\n    // When I edit foo.index.js, I will have update with replace at /foo, but\n    // really it is a conflict because in a full build foo.index.js would have\n    // met foo.js. So it needs resolution.\n    //\n    return file.absolute !== existing.absolute\n  }\n\n  const put = (file, replace) => {\n    const steps = splitPath(file)\n    const node = getNode(root, steps)\n    if (node[FILE]) {\n      if (node[FILE].isRoot) {\n        root[FILE] = Object.assign(file, root[FILE])\n      } else {\n        if (isConflict(file, node[FILE], replace)) {\n          // if (!replace && node[FILE].isFile) {\n          if (!file.isFile) return\n          const existing = node[FILE]\n          const newFile = { ...file }\n          const newExisting = { ...existing }\n          if (resolveConflict && resolveConflict(newFile, newExisting)) {\n            build.remove(existing)\n            build.remove(file) // ensure other builders don't keep a stale copy\n            build.add(newExisting)\n            build.add(newFile)\n            return\n          }\n          throw new Error(`File node conflict: ${file.path}`)\n        }\n      }\n    }\n    node[FILE] = file\n  }\n\n  const add = file => {\n    if (cacheChildren) invalidate(file)\n    put(file, false)\n  }\n\n  const update = (file, previous) => {\n    if (cacheChildren) {\n      remove(previous)\n      invalidate(file)\n    }\n    put(file, true)\n  }\n\n  const remove = file => {\n    if (cacheChildren) invalidate(file)\n    const steps = splitPath(file)\n    const nodes = getNodes(root, steps)\n    const target = nodes[nodes.length - 1]\n    delete target[FILE]\n    let i = nodes.length\n    while (i--) {\n      const node = nodes[i]\n      delete node[steps[i]]\n      if (isFileNode(node)) break\n      if (Object.keys(node).length > 0) break\n    }\n  }\n\n  const prepare = async () => {\n    const dirs = []\n    await unfold(root, rootPath, dirs)\n    return dirs\n  }\n\n  const generate = () => _tree(format, rootPath, root[FILE])\n\n  return {\n    add,\n    update,\n    remove,\n\n    prepare,\n    generate,\n  }\n}\n","export const isFile = x => x.isFile\n\nexport const notEmpty = x => !x.isEmpty\n","import { identity, noop } from '@/util'\nimport { notEmpty } from '@/model'\n\nimport { indent, _ref } from './util'\n\nconst _ = JSON.stringify\n\nconst _props = (props = {}) =>\n  // Object.entries(props).map(([prop, value]) => `${_(prop)}: ${_(value)}`)\n  Object.entries(props).flatMap(([prop, value]) => {\n    const json = JSON.stringify(value, false, 2) || 'undefined'\n    const lines = json.split('\\n')\n    const first = lines.shift()\n    return [`${_(prop)}: ${first}`, ...lines.map(x => '    ' + x)].join('\\n')\n  })\n\nconst _children = children =>\n  // NOTE children not here when tree:false\n  children && `children: () => [${children.map(_ref).join(', ')}]`\n\nconst _file = (\n  props,\n  { id: withId, importDefault, importProp },\n  { i, id, absolute, path, children }\n) =>\n  indent(1, '', [\n    `{ // f[${i}]`,\n    indent(2, ',', [\n      withId && `id: ${_(id)}`,\n      `path: ${_(path)}`,\n      `${importProp}: () => import(${_(absolute)})${\n        importDefault ? '.then(dft)' : ''\n      }`,\n      ..._props(props),\n      children && children.length > 0 && _children(children),\n    ]),\n    '}',\n  ])\n\nconst _dir = (props, { id: withId }, { i, id, path, children }) =>\n  indent(1, '', [\n    `{ // d[${i}]`,\n    indent(2, ',', [\n      withId && `id: ${_(id)}`,\n      `path: ${_(path)}`,\n      ..._props(props),\n      _children(children),\n    ]),\n    '}',\n  ])\n\nconst _generate = ({ id, format, importDefault, importProp }, files, dirs) =>\n  indent(0, '\\n', [\n    importDefault && `const dft = m => m.default`,\n\n    indent.collapse(0, '', [\n      'const f /* files */ = [',\n      indent(\n        1,\n        ','\n      )(files.map(x => _file(format(x), { id, importDefault, importProp }, x))),\n      ']',\n    ]),\n\n    dirs &&\n      indent.collapse(0, '', [\n        'const d /* dirs */ = [',\n        indent(1, ',')(dirs.map(x => _dir(format(x), { id }, x))),\n        ']',\n      ]),\n\n    dirs &&\n      indent(0, '', [\n        'for (const g of [f, d])',\n        indent(1, '', [\n          'for (const x of g) x.children = x.children ? x.children() : []',\n        ]),\n      ]),\n\n    dirs ? 'const routes = [...f, ...d]' : 'const routes = files',\n  ])\n\nconst addIndex = (x, i) => (x.i = i)\n\nexport default ({\n  format = noop,\n  keepEmpty,\n  importDefault = false,\n  importProp = 'import',\n  sortFiles,\n  sortDirs,\n}) => {\n  const routes = {}\n\n  const add = file => {\n    routes[file.path] = file\n  }\n\n  const update = (file, previous) => {\n    delete routes[previous.path]\n    routes[file.path] = file\n  }\n\n  const remove = ({ path }) => {\n    if (!routes[path]) return\n    delete routes[path]\n  }\n\n  const filter = keepEmpty ? identity : x => x.filter(notEmpty)\n\n  const generate = (dirs = []) => {\n    const files = filter(Object.values(routes))\n\n    if (sortFiles) files.sort(sortFiles)\n    if (sortDirs) dirs.sort(sortDirs)\n\n    files.forEach(addIndex)\n    if (dirs) dirs.forEach(addIndex)\n\n    return _generate({ format, importDefault, importProp }, files, dirs)\n  }\n\n  return {\n    add,\n    update,\n    remove,\n\n    generate,\n  }\n}\n","import { _ } from './util'\n\nconst _extras = extras => 'const extras = ' + JSON.stringify(extras, false, 2)\n\nexport default options => {\n  const extras = {}\n\n  const getId = options.id ? file => file.id : file => file.path\n\n  const add = file => {\n    extras[getId(file)] = file.extra\n  }\n\n  const update = file => {\n    if (_(extras[getId(file)]) === _(file.extra)) return false\n    extras[getId(file)] = file.extra\n  }\n\n  const remove = file => {\n    delete extras[getId(file)]\n  }\n\n  const generate = () => _extras(extras)\n\n  return {\n    add,\n    update,\n    remove,\n\n    generate,\n  }\n}\n","import * as fs from 'fs'\nimport * as path from 'path'\nimport parser from '@/parse'\nimport { Deferred, noop } from '@/util'\nimport Tree from './build/tree'\nimport Routes from './build/routes'\nimport Extras from './build/extras'\nimport { indent } from './build/util'\n\nconst now = Date.now\n\nconst resolved = Promise.resolve()\n\nconst wait = delay => new Promise(resolve => setTimeout(resolve, delay))\n\nconst posixify = x => x.replace(/\\\\/g, '/')\n\nexport default (options = {}) => {\n  const {\n    dir,\n    write: { routes: writeRoutes, tree: writeTree, extras: writeExtras } = {},\n    merged = false,\n    buildDebounce = 50,\n    writeFile: _writeFile = (path, contents, encoding = 'utf8') =>\n      fs.promises.writeFile(path, contents, encoding),\n    log = console,\n  } = options\n\n  const files = {}\n\n  const parse = parser(options)\n  let errors = []\n\n  const hasRoutes = writeRoutes || merged\n  const hasTree = writeTree || merged\n  const hasExtras = !!writeExtras\n\n  const api = {\n    // add: file => builders.forEach(x => x.add(file)),\n    add: (...args) => doAdd(...args),\n    // update: (file, previous) => builders.forEach(x => x.update(file, previous)),\n    update: (...args) => doUpdate(...args),\n    // remove: file => builders.forEach(x => x.remove(file)),\n    remove: (...args) => doRemove(...args),\n  }\n\n  const tree = hasTree && Tree(options, { parse, build: api })\n  const routes = (hasRoutes || hasTree) && Routes(options)\n  const extras = hasExtras && Extras(options)\n\n  const builders = [routes, tree].filter(Boolean)\n\n  let started = false\n  let timeout = null\n  let scheduled = false\n  let running = false\n  // NOTE start invalidated to ensure everything will be built on first run,\n  // even if there are no target files\n  const invalidated = { build: true, extras: true }\n  const startDeferred = Deferred()\n  let buildPromise = Promise.resolve()\n  // a promise that resolves when we arrive to a point when we might be\n  // idle (but not sure, because another volley of changes may have happened\n  // since we started processing the one for which this promise was created)\n  let idlePromise = Promise.resolve()\n  let startTime = now()\n  let latches = 0\n  let lastInvalidateTime = null\n\n  const isIdle = () =>\n    errors.length > 0 ||\n    (started && timeout === null && !scheduled && !running && latches === 0)\n\n  const logBuildSuccess = args => {\n    const targets = args.flat().filter(Boolean)\n    if (!targets.length) {\n      log.info('Nothing changed')\n      return\n    }\n    const targetsDisplayNames = targets.join(', ')\n    const duration = now() - startTime\n    startTime = null\n    log.info(`Written: ${targetsDisplayNames} (${duration}ms)`)\n  }\n\n  const writeFile = (...args) =>\n    Promise.resolve(_writeFile(...args)).then(() => path.basename(args[0]))\n\n  const build = async () => {\n    if (!routes && !tree) return\n\n    running = true\n\n    const dirs = tree ? await tree.prepare() : null\n\n    const _routes = routes.generate(dirs)\n\n    const _tree = hasTree && tree.generate()\n\n    const promises = []\n\n    if (merged) {\n      const contents = indent(0, '\\n', [\n        _routes,\n        _tree,\n        `export { f as files, d as dirs, routes, tree }\\n`,\n      ])\n      promises.push(writeFile(writeRoutes, contents))\n    } else {\n      if (writeRoutes) {\n        const contents = indent(0, '\\n', [\n          _routes,\n          `export { f as files,${dirs ? ` d as dirs,` : ''} routes }\\n`,\n        ])\n        promises.push(writeFile(writeRoutes, contents))\n      }\n      if (writeTree) {\n        // const prefix = writeRoutes\n        //   ? `import f from '${writeRoutes}'\\n\\nconst d = f.dirs`\n        //   : _routes\n        // const contents = prefix + '\\n\\n' + _tree\n        const contents = indent(0, '\\n', [\n          writeRoutes\n            ? `import { files as f, dirs as d } from '${writeRoutes}'`\n            : _routes,\n          _tree,\n          'export default tree',\n        ])\n        promises.push(writeFile(writeTree, contents))\n      }\n    }\n\n    return Promise.all(promises)\n  }\n\n  const buildExtras = async () => {\n    if (!extras) return\n\n    const _extras = extras.generate()\n\n    const contents = indent(0, '\\n', [\n      //\n      _extras,\n      'export default extras',\n    ])\n\n    return writeFile(writeExtras, contents)\n  }\n\n  const schedule = () => {\n    timeout = null\n    if (scheduled) return\n    scheduled = true\n    buildPromise = buildPromise\n      .then(() => {\n        scheduled = false\n        const { build: rebuild, extras: rebuildExtras } = invalidated\n        invalidated.build = invalidated.extras = false\n        return Promise.all([rebuild && build(), rebuildExtras && buildExtras()])\n      })\n      .then(logBuildSuccess)\n      .catch(err => {\n        errors.push(err)\n      })\n      .finally(() => {\n        running = false\n      })\n    return buildPromise\n  }\n\n  let _resolveIdlePromise = noop\n\n  const invalidate = (debounce = buildDebounce) => {\n    if (!started) return\n\n    if (timeout !== null) {\n      clearTimeout(timeout)\n    }\n\n    // NOTE we still need to resolve the previous idlePromise, or _onIdle will\n    // hang on it (especially if we've just cancelled an active timeout just\n    // above)\n    const resolvePrevious = _resolveIdlePromise\n\n    idlePromise = new Promise(resolve => {\n      _resolveIdlePromise = resolve\n      const doSchedule = () => {\n        if (latches > 0) {\n          resolve()\n          return\n        }\n        schedule().finally(resolve)\n      }\n      timeout = setTimeout(doSchedule, debounce)\n      notifyChange() // must happen once timeout is non null (for idle state)\n    })\n\n    resolvePrevious()\n  }\n\n  const release = (canceled = false) => {\n    latches--\n    if (canceled) {\n      log.info('Bailing out')\n      return\n    }\n    if (started && latches === 0) {\n      invalidate(Math.max(0, buildDebounce - (Date.now() - lastInvalidateTime)))\n    }\n  }\n\n  // invalidates (i.e. make busy/non idle, and wait to see if more changes are\n  // coming for the debounce duration) right when the call is made, then wait\n  // for at least the debounce delay (hene lastInvalidateTime), and wait even\n  // longer if the given promise has not resolved at this point\n  const invalidateUntil = promise => {\n    lastInvalidateTime = Date.now()\n    latches++\n    return promise.finally(release)\n  }\n\n  const input = () => {\n    if (startTime === null) {\n      startTime = now()\n      latches = 0\n      errors = []\n    }\n  }\n\n  const pushError = err => {\n    errors.push(err)\n  }\n\n  const start = () => {\n    input()\n    started = true\n    invalidate(0)\n    startDeferred.resolve()\n  }\n\n  // NOTE parse is async, but we need add/update to be sync\n  const _parse = async (pathStats, previous) => {\n    const file = await parse(pathStats, previous)\n    // canceled\n    if (file === false) return false\n    return file\n  }\n\n  const doAdd = file => {\n    files[file.relative] = file\n    if (file === false) return false\n    if (extras && extras.add(file) !== false) {\n      invalidated.extras = true\n    }\n    invalidated.build = true\n    builders.forEach(x => x.add(file))\n  }\n\n  const add = pathStats => {\n    input()\n    const [, stats] = pathStats\n    if (stats.isDirectory()) return\n    invalidateUntil(\n      _parse(pathStats)\n        .then(doAdd)\n        .catch(pushError)\n    )\n  }\n\n  const doUpdate = (file, previous) => {\n    files[file.relative] = file\n\n    if (file === false) return false\n\n    if (\n      extras &&\n      file.rebuildExtras !== false &&\n      extras.update(file, previous) !== false\n    ) {\n      invalidated.extras = true\n    }\n\n    if (file.rebuild === false) return false\n\n    invalidated.build = true\n\n    builders.forEach(x => x.update(file, previous))\n  }\n\n  const update = pathStats => {\n    input()\n    const [path, stats] = pathStats\n    if (stats.isDirectory()) return\n    const previous = files[path]\n    invalidateUntil(\n      _parse(pathStats, previous)\n        .then(file => doUpdate(file, previous))\n        .catch(pushError)\n    )\n  }\n\n  const doRemove = file => {\n    delete files[file.relative]\n    if (extras && extras.remove(file) !== false) invalidated.extras = true\n    invalidated.build = true\n    builders.forEach(x => x.remove(file))\n    invalidate()\n  }\n\n  const remove = ([path, stats]) => {\n    try {\n      input()\n      if (stats.isDirectory()) return\n      const file = files[path]\n      if (!file) return\n\n      delete files[path]\n\n      if (extras && extras.remove(file) !== false) {\n        invalidated.extras = true\n      }\n\n      invalidated.build = true\n      api.remove(file)\n\n      invalidate()\n    } catch (err) {\n      pushError(err)\n    }\n  }\n\n  const _onIdle = () =>\n    isIdle() ? resolved : Promise.all([idlePromise, buildPromise]).then(_onIdle)\n\n  const onIdle = async (changeTimeout = 0) => {\n    await startDeferred.promise\n\n    if (changeTimeout) {\n      // we stop waiting early if Routix has caught the change (waitChange)\n      // -- this ensures optimal waiting time but, unfortunately, in the\n      // marginal case of when user deletes/renames a Routix page file;\n      // we're still degenerate (i.e. wait full delay) for any other source\n      // watched by Rollup only...\n      await Promise.race([wait(changeTimeout), onChange()])\n    }\n\n    await _onIdle()\n\n    if (errors.length > 0) {\n      // throw errors[0]\n      if (errors.length === 1) {\n        throw errors[0]\n      }\n      const err = new Error(\n        `Build errors (${errors.length})\\n1. ${errors[0].stack}`\n      )\n      err.name = 'RoutixBuildError'\n      err.errors = errors\n      errors = []\n      throw err\n    }\n  }\n\n  let changeListeners = []\n\n  const notifyChange = () => {\n    for (const f of changeListeners) f()\n    changeListeners = []\n  }\n\n  const onChange = () => new Promise(resolve => changeListeners.push(resolve))\n\n  // NOTE for some reason, CheapWatch seems to give posix path on Windows\n  const get = filename => files[posixify(path.relative(dir, filename))]\n\n  return { start, add, update, remove, onChange, onIdle, get }\n}\n","import fs from 'fs'\nimport * as path from 'path'\n\nexport default (from, target) => {\n  let last = null\n  let cur = from\n  while (cur !== last) {\n    const file = path.resolve(cur, target)\n    if (fs.existsSync(file)) {\n      return file\n    }\n    last = cur\n    cur = path.dirname(cur)\n  }\n  throw new Error(`Could not find ${target} from ${from} and upper`)\n}\n","import * as path from 'path'\nimport { identity } from '@/util'\nimport findup from '@/util/findup'\n\n// we need to find up because we're probably in /dist\nlet _root\nconst root = () =>\n  _root || (_root = path.dirname(findup(__dirname, 'package.json')))\nconst defaultRoutesPath = () => path.resolve(root(), 'routes.js')\nconst defaultTreePath = () => path.resolve(root(), 'tree.js')\n\nconst parseExtensions = (extensions = []) => {\n  if (!extensions) return extensions\n  return extensions.map(ext => (!ext.startsWith('.') ? '.' + ext : ext))\n}\n\nconst emptyObject = {}\n\n/* eslint-disable no-console */\nconst defaultLogger = {\n  log: console.log.bind(console, '[routix]'),\n  info: console.info.bind(console, '[routix]'),\n  error: console.error.bind(console, '[routix]'),\n}\n/* eslint-enable no-console */\n\nexport const parseOptions = ({\n  /**\n   * @type {string}\n   */\n  dir,\n\n  /**\n   * @type {string[]}\n   */\n  extensions = [],\n\n  /**\n   * @type {function}\n   */\n  ignore = path => /(?:^|\\/)(?:node_modules|\\.git)\\//.test(path),\n\n  /**\n   * @type {bool | { routes: bool|string, tree: bool|string }}\n   *\n   *     write: true|false\n   *\n   *     write: { routes: true|false, tree: true|false }\n   *\n   *     write: { routes: '/path/to/file', tree: '' }\n   */\n  write,\n\n  /**\n   * @type {bool}\n   *\n   * Whether to write a single `routes.js` file, or merge routes and tree in the\n   * same file.\n   */\n  merged = true,\n\n  /**\n   * @type {bool} Adds an `id` from a hash of absolute path.\n   */\n  id = true,\n\n  /**\n   * @type {bool}\n   *\n   * Whether to watch FS after initial build.\n   *\n   * NOTE When used in Rollup, this option is set automatically by the plugin,\n   * based on the ROLLUP_WATCH env variable (it can be overridden, but it's\n   * probably not what you want).\n   */\n  watch = null,\n\n  /**\n   * @type {int|falsy}\n   *\n   * Defer Rollup build by this duration (ms); this is needed to ensure that\n   * our file watcher has the time to pick file changes (and then holds Rollup\n   * until routes.js is generated).\n   *\n   * NOTE This is only useful when used as a bundler (Rollup) plugin.\n   */\n  watchDelay = 40,\n\n  /**\n   * @type {bool} Prepend paths with a leading slash\n   */\n  leadingSlash = false,\n\n  /**\n   * @type {bool} Import default import\n   */\n  importDefault = false,\n\n  /**\n   * @type {string} Name of the import property in route objects\n   */\n  importProp = 'import',\n\n  /**\n   * Files:\n   *\n   *     ({ isFile: true, absolute, relative, path, extension }) => item | undefined\n   *\n   * Directories:\n   *\n   *     ({ isFile: false, absolute, relative, path }) => item | undefined\n   *\n   * Virtual directories (when building tree from modified paths):\n   *\n   *     ({ isVirtual: true, path }) => item | undefined\n   */\n  parse = identity,\n\n  /**\n   * Alternative way to provide parse (allow to preprocess options).\n   *\n   * @type {options => (item, previous) => parsed}\n   */\n  parser,\n\n  /**\n   * @type {({ isFile: bool, path: string }) => object}\n   *\n   * item => props\n   */\n  format = () => emptyObject,\n\n  /**\n   * @type {bool} `true` to auto start Routix (only with node API)\n   */\n  start = false,\n\n  // --- Advanced ---\n\n  /**\n   * @type {int} Number of ms to wait for a possible new event before starting\n   * the build process.\n   */\n  buildDebounce = 50,\n\n  /**\n   * @type {object} Custom logger (with `console` API)\n   */\n  log = defaultLogger,\n\n  /**\n   * @type {function} Custom file writer: `async (name, contents) => {}`\n   */\n  writeFile,\n\n  /**\n   * @type {function} Custom sorter for files.\n   */\n  sortFiles = null,\n  /**\n   * @type {function} Custom sorter for dirs.\n   */\n  sortDirs = null,\n  /**\n   * @type {function} Custom sorter for tree children.\n   */\n  sortChildren = null,\n\n  /**\n   * @type {Function} Resolve conflicts between file node with same path.\n   */\n  resolveConflict,\n} = {}) => {\n  const options = {\n    id,\n    watchDelay,\n    dir: dir && path.resolve(dir),\n    extensions: parseExtensions(extensions),\n    ignore,\n    watch,\n    leadingSlash,\n    importDefault,\n    importProp,\n    parse,\n    format,\n    merged,\n    write: {\n      routes:\n        !write ||\n        write === true ||\n        !write.hasOwnProperty('routes') ||\n        write.routes === true\n          ? defaultRoutesPath()\n          : path.resolve(write.routes),\n      tree:\n        !merged &&\n        (!write ||\n        write === true ||\n        !write.hasOwnProperty('tree') ||\n        write.tree === true\n          ? defaultTreePath()\n          : path.resolve(write.tree)),\n      extras: write && write.extras,\n    },\n    start,\n    // internal (for testing)\n    writeFile,\n    buildDebounce,\n    log,\n    sortFiles,\n    sortDirs,\n    sortChildren,\n    resolveConflict,\n  }\n\n  if (parser) {\n    options.parse = parser(options)\n  }\n\n  return options\n}\n"],"names":["promisify","readdir$1","stat$1","watch","path.extname","path.join","_","_props","fs.promises","parser","path.basename","path.relative","path.resolve","fs","path.dirname"],"mappings":"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AAC,UAAU,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;AACxE,EAAC;AACD;AACA,MAAM,WAAW,GAAG,GAAE;AACtB;AACA;AACA,MAAM,aAAa,GAAG;AACtB,EAAE,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC;AAC5C,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC;AAC9C,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC;AAChD,EAAC;AACD;AACA;AACY,MAAC,YAAY,GAAG,CAAC;AAC7B;AACA;AACA;AACA,EAAE,GAAG;AACL;AACA;AACA;AACA;AACA,EAAE,UAAU,GAAG,EAAE;AACjB;AACA;AACA;AACA;AACA,EAAE,MAAM,GAAG,IAAI,IAAI,kCAAkC,CAAC,IAAI,CAAC,IAAI,CAAC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,KAAK;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,MAAM,GAAG,IAAI;AACf;AACA;AACA;AACA;AACA,EAAE,EAAE,GAAG,IAAI;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,KAAK,GAAG,IAAI;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,UAAU,GAAG,EAAE;AACjB;AACA;AACA;AACA;AACA,EAAE,YAAY,GAAG,KAAK;AACtB;AACA;AACA;AACA;AACA,EAAE,aAAa,GAAG,KAAK;AACvB;AACA;AACA;AACA;AACA,EAAE,UAAU,GAAG,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,KAAK,GAAG,QAAQ;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,MAAM;AACR;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,MAAM,GAAG,MAAM,WAAW;AAC5B;AACA;AACA;AACA;AACA,EAAE,KAAK,GAAG,KAAK;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,aAAa,GAAG,EAAE;AACpB;AACA;AACA;AACA;AACA,EAAE,GAAG,GAAG,aAAa;AACrB;AACA;AACA;AACA;AACA,EAAE,SAAS;AACX;AACA;AACA;AACA;AACA,EAAE,SAAS,GAAG,IAAI;AAClB;AACA;AACA;AACA,EAAE,QAAQ,GAAG,IAAI;AACjB;AACA;AACA;AACA,EAAE,YAAY,GAAG,IAAI;AACrB;AACA;AACA;AACA;AACA,EAAE,eAAe;AACjB,CAAC,GAAG,EAAE,KAAK;AACX,EAAE,MAAM,OAAO,GAAG;AAClB,IAAI,EAAE;AACN,IAAI,UAAU;AACd,IAAI,GAAG,EAAE,GAAG,IAAIA,YAAY,CAAC,GAAG,CAAC;AACjC,IAAI,UAAU,EAAE,eAAe,CAAC,UAAU,CAAC;AAC3C,IAAI,MAAM;AACV,IAAI,KAAK;AACT,IAAI,YAAY;AAChB,IAAI,aAAa;AACjB,IAAI,UAAU;AACd,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,MAAM;AACV,IAAI,KAAK,EAAE;AACX,MAAM,MAAM;AACZ,QAAQ,CAAC,KAAK;AACd,QAAQ,KAAK,KAAK,IAAI;AACtB,QAAQ,CAAC,KAAK,CAAC,cAAc,CAAC,QAAQ,CAAC;AACvC,QAAQ,KAAK,CAAC,MAAM,KAAK,IAAI;AAC7B,YAAY,iBAAiB,EAAE;AAC/B,YAAYA,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC;AACtC,MAAM,IAAI;AACV,QAAQ,CAAC,MAAM;AACf,SAAS,CAAC,KAAK;AACf,QAAQ,KAAK,KAAK,IAAI;AACtB,QAAQ,CAAC,KAAK,CAAC,cAAc,CAAC,MAAM,CAAC;AACrC,QAAQ,KAAK,CAAC,IAAI,KAAK,IAAI;AAC3B,YAAY,eAAe,EAAE;AAC7B,YAAYA,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACrC,MAAM,MAAM,EAAE,KAAK,IAAI,KAAK,CAAC,MAAM;AACnC,KAAK;AACL,IAAI,KAAK;AACT;AACA,IAAI,SAAS;AACb,IAAI,aAAa;AACjB,IAAI,GAAG;AACP,IAAI,SAAS;AACb,IAAI,QAAQ;AACZ,IAAI,YAAY;AAChB,IAAI,eAAe;AACnB,IAAG;AACH;AACA,EAAE,IAAI,MAAM,EAAE;AACd,IAAI,OAAO,CAAC,KAAK,GAAG,MAAM,CAAC,OAAO,EAAC;AACnC,GAAG;AACH;AACA,EAAE,OAAO,OAAO;AAChB;;;;;;;"}